C51 COMPILER V8.06   SOFT_I2C                                                              05/02/2008 22:28:52 PAGE 1   


C51 COMPILER V8.06, COMPILATION OF MODULE SOFT_I2C
OBJECT MODULE PLACED IN soft_i2c.OBJ
COMPILER INVOKED BY: C:\Keil8\C51\Bin\C51.exe soft_i2c.c DB OE LARGE

line level    source

   1          #include <C8051F340.h>
   2          
   3          sbit SDA = P1^3;
   4          sbit SCL = P1^4;
   5          
   6          void i2c_dly()
   7          {
   8   1      int i;
   9   1      for(i=0;i<100;i++);
  10   1      }
  11          
  12          void i2c_start(void)
  13          {
  14   1        SDA = 1;             // i2c start bit sequence
  15   1        i2c_dly();
  16   1        SCL = 1;
  17   1        i2c_dly();
  18   1        SDA = 0;
  19   1        i2c_dly();
  20   1        SCL = 0;
  21   1        i2c_dly();
  22   1      }
  23          
  24          void i2c_stop(void)
  25          {
  26   1        SDA = 0;             // i2c stop bit sequence
  27   1        i2c_dly();
  28   1        SCL = 1;
  29   1        i2c_dly();
  30   1        SDA = 1;
  31   1        i2c_dly();
  32   1      }
  33          
  34          unsigned char i2c_rx(char ack)
  35          {
  36   1        char i, midato=0;
  37   1        SDA = 1; 
  38   1        SCL = 1;
  39   1        i2c_dly();
  40   1      
  41   1              for (i=7;i>=0;i--)
  42   1              {
  43   2                      midato = (midato<<1)|SDA;
  44   2                      SCL = 1;
  45   2                      i2c_dly();
  46   2                      SCL = 0;
  47   2                      i2c_dly();
  48   2              }
  49   1              if(ack) 
  50   1                      SDA = 0;
  51   1              else 
  52   1                      SDA = 1;
  53   1      
  54   1        SCL = 1;
  55   1        i2c_dly();             // send (N)ACK bit
C51 COMPILER V8.06   SOFT_I2C                                                              05/02/2008 22:28:52 PAGE 2   

  56   1        SCL = 0;
  57   1        SDA = 1;
  58   1        i2c_dly();
  59   1        return midato;
  60   1      }
  61          
  62          bit i2c_tx(unsigned char d)
  63          {
  64   1      char i;
  65   1      static bit b;
  66   1              for (i=7;i>=0;i--)
  67   1              {
  68   2                      SDA = (d>>i)&1;
  69   2                      i2c_dly();
  70   2                      SCL = 1;
  71   2                      i2c_dly();
  72   2                      SCL = 0;
  73   2                      i2c_dly();
  74   2              }
  75   1      
  76   1        SDA = 1;
  77   1        SCL = 1;
  78   1        i2c_dly();
  79   1        b = SDA;          // possible ACK bit
  80   1        SCL = 0;
  81   1        i2c_dly();
  82   1        return b;
  83   1      }
  84          
  85          
  86          void write_register(char device, char addr, char cmd)
  87          {
  88   1      i2c_start();              // send start sequence
  89   1      i2c_tx(device);             // SRF08 I2C address with R/W bit clear
  90   1      i2c_tx(addr);             // SRF08 command register address
  91   1      i2c_tx(cmd);             // command to start ranging in cm
  92   1      i2c_stop();               // send stop sequence 
  93   1      }
  94          
  95          char read_register(char device, char addr)
  96          {
  97   1      char midato;
  98   1      i2c_start();              // send start sequence
  99   1      i2c_tx(device);             // SRF08 I2C address with R/W bit clear
 100   1      i2c_tx(addr);             // SRF08 light sensor register address
 101   1      i2c_start();              // send a restart sequence
 102   1      i2c_tx(device|1);             // SRF08 I2C address with R/W bit set
 103   1      midato = i2c_rx(0);     // get low byte of the range - note we don't acknowledge the last byte.
 104   1      i2c_stop();               // send stop sequence 
 105   1      return midato;
 106   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    231    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.

C51 COMPILER V8.06   SOFT_I2C                                                              05/02/2008 22:28:52 PAGE 3   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
